@import "tailwindcss";

@plugin 'tailwindcss-animate';
@plugin '@tailwindcss/typography';

@custom-variant dark (&:is(.dark *));

@theme {
  --breakpoint-xs: 450px;

  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-active-link: hsl(var(--active-link-color));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-chart-1: hsl(var(--chart-1));
  --color-chart-2: hsl(var(--chart-2));
  --color-chart-3: hsl(var(--chart-3));
  --color-chart-4: hsl(var(--chart-4));
  --color-chart-5: hsl(var(--chart-5));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 10% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;

    /* Skills */
    --skills-section-shadow: hsl(var(--background) / 0.9);
    --skills-bg: hsl(var(--border) / 0.3);
    --skills-box-bg: #f6f6f6;
    /* Skills */

    --intro-shape-color: 207 90% 54%;

    --active-link-color: 200 90% 54%;

    --noise-bg-transparency: 0.01;
  }
  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;

    /* Skills */
    --skills-section-shadow: hsl(var(--background));
    --skills-bg: #141414;
    --skills-box-bg: #0a0a0c;
    /* Skills */

    [data-rmiz-modal-overlay="visible"] {
      background-color: hsl(var(--background)) !important;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 1rem;
  @media (width >= --theme(--breakpoint-xs)) {
    max-width: none;
  }
  @media (width >= 1280px) {
    max-width: 1280px;
    padding-inline: 2rem;
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@utility blur-dots-bg {
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    background:
      linear-gradient(
          to bottom,
          var(--custom-bg-color, hsl(var(--background) / 0.7)),
          transparent
        )
        center / 100% 100%,
      linear-gradient(
          to top,
          var(--custom-bg-color, hsl(var(--background) / 0.7)),
          transparent
        )
        center / 100% 100%,
      radial-gradient(
          circle,
          hsl(var(--accent-foreground) / 0.5) 10%,
          transparent 12%
        )
        center / 11px 11px repeat;
    backdrop-filter: blur(1.5px);
    filter: blur(1px);
  }
}

@utility my-picture-wrapper {
  &::after {
    content: "";
    position: absolute;
    inset: -5px;
    z-index: 2;
    background:
      linear-gradient(to top, hsl(var(--background)) 5%, transparent 40%),
      radial-gradient(
        circle at 93% 88%,
        hsl(var(--background)) 5%,
        transparent 25%
      ),
      radial-gradient(
        ellipse at 10% 90%,
        hsl(var(--background)) 7%,
        transparent 25%
      ),
      radial-gradient(
        circle at center bottom,
        hsl(var(--background)) 5%,
        transparent 30%
      );
  }
}

@utility socials-contacts-vertical {
  @apply top-1/2 right-0 left-auto! h-[200px]! w-12! duration-200! [writing-mode:vertical-lr];
  transform: translateX(-0.25rem) translateY(-50%) !important;
}

@utility skills-container-bg {
  background: var(--skills-bg);
}

@utility skills-container-overlay {
  position: relative;
  overflow: hidden;

  &::before,
  &::after {
    content: "";
    display: block;
    position: absolute;
    inset: -10px;
    z-index: 1;
    pointer-events: none;
    background:
      linear-gradient(to bottom, var(--skills-section-shadow), transparent 25%),
      linear-gradient(to top, var(--skills-section-shadow), transparent 25%),
      linear-gradient(to left, var(--skills-section-shadow), transparent 15%),
      linear-gradient(to right, var(--skills-section-shadow), transparent 15%);
  }
}

@utility skill-box {
  position: relative;
  width: 68px;
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--skills-box-bg);
  border-radius: 12px;
  flex-shrink: 0;
  @apply shadow-border/30 ring-border/50 p-3 shadow-lg ring-1 sm:w-24 sm:p-6;

  &:hover {
    transition: all 500ms ease-in-out;
  }

  &:not(.empty) {
    overflow: clip;

    & .skill-name {
      transition: all 300ms;
      position: absolute;
      padding: 6px;
      backdrop-filter: blur(3px);
      opacity: 0;
      inset: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 12px;
      max-width: 100%;
      transform: translateY(100%) scaleY(0);
      font-size: 8px;
      text-align: center;
      @apply bg-background/75 animate-out font-medium sm:text-sm;
    }

    &:hover .skill-name {
      transform: translateY(0) scaleY(1);
      opacity: 1;
    }
  }

  &.empty {
    filter: brightness(101%);
    transition: all 1.2s ease-out;

    &:hover {
      scale: 0.85;
      transition: all 0.3s ease-out;
    }
  }
}

@utility container {
  @apply max-w-5xl;
}

@utility bg-dots {
  position: absolute;
  inset: 0;
  background:
    linear-gradient(to bottom, hsl(var(--background)), transparent 11%)
      no-repeat,
    linear-gradient(to top, hsl(var(--background)), transparent 11%) no-repeat,
    radial-gradient(
        circle,
        hsl(var(--muted-foreground) / 0.07) 15%,
        transparent 5%
      )
      repeat;
  background-size:
    100% 100%,
    100% 100%,
    13px 13px;
}

@utility bg-noise {
  position: relative;

  &::before {
    content: "";
    background: hsl(var(--secondary) / var(--noise-bg-transparency))
      url("./../../public/shapes/noise_bg.svg") 100% 100%;
    filter: invert(250%);
    position: absolute;
    inset: 0;
    z-index: -1;
    opacity: 0.3;
  }
}

@utility dark {
  :is(&) {
    :is(.bg-noise)::before {
      filter: invert(0%);
    }
  }
}

@utility card {
  position: relative;

  .hover-animated-border {
    background: hsl(var(--secondary) / 0.2);
    position: absolute;
    overflow: hidden;
    inset: -3px;
    z-index: -1;
    border-radius: inherit;
    display: flex;
    align-items: center;
    justify-content: center;
    filter: blur(4px);

    &::before {
      content: "";
      position: absolute;
      width: 30%;
      height: 150%;
      background: hsl(var(--active-link-color) / 0.5);
      box-shadow: 0 0 50px hsl(var(--active-link-color));
      opacity: 0;
      transition: all 0.3s;
      rotate: 45deg;
      animation: hover-animated-border 9s infinite ease-in-out paused;
    }
  }

  &:hover .hover-animated-border::before {
    opacity: 1;
    animation-play-state: running;
  }
}

@utility get-in-touch {
  position: relative;
  padding-bottom: 15px;

  &::after {
    content: url("./../../public/shapes/arrow.svg");
    position: absolute;
    top: 0;
    translate: 10px 15%;
    rotate: -25deg;
  }
}

@utility nav-link {
  overflow: hidden;
  .nav-link-effect {
    transform: translateY(30px);
    text-shadow:
      0 -30px 0 currentColor,
      0 0 5px currentColor;
    transition:
      transform 0.3s cubic-bezier(0.275, 0.885, 0.5, 1.275),
      color 0.3s cubic-bezier(0.275, 0.885, 0.5, 1.275);
  }

  &:is(:hover, :focus, .active) {
    .nav-link-effect {
      transform: translateY(0);
    }
  }
}

@utility icon-drop-shadow {
  filter: drop-shadow(0px 0px 0.5rem var(--drop-shadow-color, #ffffff8c));
}

@layer utilities {
  html {
    @apply scroll-pt-[70px] scroll-smooth;
    scrollbar-color: hsl(var(--muted-foreground)) hsl(var(--secondary) / 0.5);
    scrollbar-width: thin;
  }

  body {
    font-family: Arial, Helvetica, sans-serif;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
  :is(button, [role="button"]):not(:disabled) {
    @apply cursor-pointer;
  }
}

@layer components {
  #intro-section {
    @apply relative z-2;
  }

  #intro-section::before {
    content: "";
    position: absolute;
    clip-path: polygon(9% 15%, 36% 14%, 39% 50%, 42% 88%, 26% 64%, 22% 34%);
    left: 10%;
    top: 5%;
    width: 60%;
    height: 60%;
    background-color: hsl(var(--intro-shape-color));
    filter: drop-shadow(0 0 350px hsl(var(--intro-shape-color)));
    z-index: -1;
    animation: intro-shape 8s infinite alternate;
  }

  #intro-section::after {
    content: "";
    position: absolute;
    inset: 0;
    background: hsl(var(--background) / 0.4);
    backdrop-filter: blur(50px);
    z-index: -1;
  }
}

@layer utilities {
  @keyframes intro-shape {
    35% {
      clip-path: polygon(1% 29%, 36% 14%, 39% 50%, 42% 88%, 26% 64%, 9% 56%);
    }
    65% {
      clip-path: polygon(59% 33%, 36% 14%, 39% 50%, 42% 88%, 26% 64%, 9% 56%);
    }
    100% {
      clip-path: polygon(20% 40%, 20% 14%, 25% 50%, 42% 88%, 50% 64%, 12% 70%);
    }
  }

  @keyframes hover-animated-border {
    to {
      rotate: calc(45deg + 360deg);
    }
  }
}
